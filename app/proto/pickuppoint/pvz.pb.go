// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: pvz.proto

package pickuppoint

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPickupPointRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPickupPointRequest) Reset() {
	*x = GetPickupPointRequest{}
	mi := &file_pvz_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPickupPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPickupPointRequest) ProtoMessage() {}

func (x *GetPickupPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pvz_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPickupPointRequest.ProtoReflect.Descriptor instead.
func (*GetPickupPointRequest) Descriptor() ([]byte, []int) {
	return file_pvz_proto_rawDescGZIP(), []int{0}
}

type GetPickupPointResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PickupPoints  []*PickupPoint         `protobuf:"bytes,1,rep,name=pickup_points,json=pickupPoints,proto3" json:"pickup_points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPickupPointResponse) Reset() {
	*x = GetPickupPointResponse{}
	mi := &file_pvz_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPickupPointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPickupPointResponse) ProtoMessage() {}

func (x *GetPickupPointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pvz_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPickupPointResponse.ProtoReflect.Descriptor instead.
func (*GetPickupPointResponse) Descriptor() ([]byte, []int) {
	return file_pvz_proto_rawDescGZIP(), []int{1}
}

func (x *GetPickupPointResponse) GetPickupPoints() []*PickupPoint {
	if x != nil {
		return x.PickupPoints
	}
	return nil
}

type PickupPoint struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RegistrationDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=registration_date,json=registrationDate,proto3" json:"registration_date,omitempty"`
	City             string                 `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PickupPoint) Reset() {
	*x = PickupPoint{}
	mi := &file_pvz_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PickupPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickupPoint) ProtoMessage() {}

func (x *PickupPoint) ProtoReflect() protoreflect.Message {
	mi := &file_pvz_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickupPoint.ProtoReflect.Descriptor instead.
func (*PickupPoint) Descriptor() ([]byte, []int) {
	return file_pvz_proto_rawDescGZIP(), []int{2}
}

func (x *PickupPoint) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PickupPoint) GetRegistrationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.RegistrationDate
	}
	return nil
}

func (x *PickupPoint) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

var File_pvz_proto protoreflect.FileDescriptor

const file_pvz_proto_rawDesc = "" +
	"\n" +
	"\tpvz.proto\x12\vpickuppoint\x1a\x1fgoogle/protobuf/timestamp.proto\"\x17\n" +
	"\x15GetPickupPointRequest\"W\n" +
	"\x16GetPickupPointResponse\x12=\n" +
	"\rpickup_points\x18\x01 \x03(\v2\x18.pickuppoint.PickupPointR\fpickupPoints\"z\n" +
	"\vPickupPoint\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12G\n" +
	"\x11registration_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x10registrationDate\x12\x12\n" +
	"\x04city\x18\x03 \x01(\tR\x04city2j\n" +
	"\tPPService\x12]\n" +
	"\x12GetPickupPointList\x12\".pickuppoint.GetPickupPointRequest\x1a#.pickuppoint.GetPickupPointResponseBPZNgithub.com/RLutsuk/Service-for-pickup-points/app/proto/pickuppoint;pickuppointb\x06proto3"

var (
	file_pvz_proto_rawDescOnce sync.Once
	file_pvz_proto_rawDescData []byte
)

func file_pvz_proto_rawDescGZIP() []byte {
	file_pvz_proto_rawDescOnce.Do(func() {
		file_pvz_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pvz_proto_rawDesc), len(file_pvz_proto_rawDesc)))
	})
	return file_pvz_proto_rawDescData
}

var file_pvz_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pvz_proto_goTypes = []any{
	(*GetPickupPointRequest)(nil),  // 0: pickuppoint.GetPickupPointRequest
	(*GetPickupPointResponse)(nil), // 1: pickuppoint.GetPickupPointResponse
	(*PickupPoint)(nil),            // 2: pickuppoint.PickupPoint
	(*timestamppb.Timestamp)(nil),  // 3: google.protobuf.Timestamp
}
var file_pvz_proto_depIdxs = []int32{
	2, // 0: pickuppoint.GetPickupPointResponse.pickup_points:type_name -> pickuppoint.PickupPoint
	3, // 1: pickuppoint.PickupPoint.registration_date:type_name -> google.protobuf.Timestamp
	0, // 2: pickuppoint.PPService.GetPickupPointList:input_type -> pickuppoint.GetPickupPointRequest
	1, // 3: pickuppoint.PPService.GetPickupPointList:output_type -> pickuppoint.GetPickupPointResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pvz_proto_init() }
func file_pvz_proto_init() {
	if File_pvz_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pvz_proto_rawDesc), len(file_pvz_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pvz_proto_goTypes,
		DependencyIndexes: file_pvz_proto_depIdxs,
		MessageInfos:      file_pvz_proto_msgTypes,
	}.Build()
	File_pvz_proto = out.File
	file_pvz_proto_goTypes = nil
	file_pvz_proto_depIdxs = nil
}
